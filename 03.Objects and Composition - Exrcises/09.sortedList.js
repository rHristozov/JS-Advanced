function createSortedList() {
    // Подход:
    // 1. Използваме listNumbers за съхранение на числата. 
    // 2. Създаваме обект instance, който предоставя методи за работа с масива: добавяне (add), премахване (remove) и достъп (get).
    // 3. Свойството size: 0 следи броя на елементите в масива. 
    // 4. Методи като _validate и comparator осигуряват правилна работа на основните операции, като проверяват валидността на индексите и поддържат реда на елементите.

    const listNumbers = [];

    // Създава обект, който предоставя достъп до функциите и свойството size
    // Защо използваме size: 0? - Размерът на масива е капсулиран, така че поддържаме външно свойство, което е винаги синхронизирано с броя елементи.
    const instance = {
        add,       // Добавя елемент към масива
        remove,    // Премахва елемент от масива по индекс
        get,       // Връща елемент от масива по индекс
        size: 0    // Поддържа текущия брой елементи в масива
    };

    // Функция за добавяне на елемент
    function add(element) {
        listNumbers.push(element); // Добавя елемента в края на масива
        listNumbers.sort(comparator); // Поддържа масива сортиран във възходящ ред
        instance.size++; // Увеличава размера на колекцията, за да отразява добавения елемент
        return instance; // Позволява верижни операции
    }

    // Функция за премахване на елемент по даден индекс
    function remove(index) {
        _validate(index); // Проверява дали индексът е валиден
        listNumbers.splice(index, 1); // Премахва елемента на посочения индекс
        instance.size--; // Намалява размера на колекцията, за да отразява премахнатия елемент
        return instance; // Позволява верижни операции
    }

    // Функция за получаване на елемент по даден индекс
    function get(index) {
        _validate(index); // Проверява дали индексът е валиден
        return listNumbers[index]; // Връща елемента на дадения индекс
    }

    // Вътрешна функция за проверка дали индексът е валиден
    function _validate(index) {
        if (index < 0 || index >= listNumbers.length) {
            throw new Error("Index is out of bounds"); // Хвърля грешка при невалиден индекс
        }
    }

    // Функция за сортиране на елементите във възходящ ред
    function comparator(e1, e2) {
        return e1 - e2; // Сравнява два елемента и връща разликата им
    }

    // Връща обекта, съдържащ методите и свойството size
    return instance;
}